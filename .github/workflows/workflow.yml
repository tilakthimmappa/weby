---
name: "workflow"

'on':
  push:
    branches:
      - master
    tags:
      - "*"
  pull_request:
    branches:
      - master

jobs:
  ci:
    name: "Integration"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Checkout Code"
        uses: "actions/checkout@v2"
        
      - name: "Lint code"
        run: |
          echo "Linting repository"

      # - name: Brakeman linter
      #   uses: devmasx/brakeman-linter-action@v1.0.0
      #   env:
      #     GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

      # - name: 'Bundler Audit'
      #   uses: andrewmcodes/bundler-audit-action@main
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      # - name: Brakeman code scanning
      #   uses: standardnotes/brakeman-action@v1.0.0
      #   with:
      #     options: "--color -q"

  cd:
    name: "Deployment"
    runs-on: "ubuntu-latest"
    needs:
      - ci
    steps:
      - name: "Checkout Code"
        uses: "actions/checkout@v2"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

  #     # - name: ECR Setup Terraform
  #     #   uses: hashicorp/setup-terraform@v1.4.0
  #     #   with:
  #     #     terraform_version: 1.1.8

  #     # - name: Terraform Init ECR
  #     #   run: terraform -chdir=terraform/ecr/ init
      
  #     # - name: Terraform Validate ECR
  #     #   run: terraform -chdir=terraform/ecr/ validate

  #     # - name: Terraform Init Plan
  #     #   run: terraform -chdir=terraform/ecr/ plan

  #     # - name: Terraform Apply ECR
  #     #   run: terraform -chdir=terraform/ecr/ apply -auto-approve

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_NAME }}
          IMAGE_TAG: "latest"
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
      
      - name: Terraform Init
        run: terraform -chdir=terraform/ init
      
      - name: Terraform Validate
        run: terraform -chdir=terraform/ validate
      
      - name: Terraform Plan
        run: terraform -chdir=terraform/ plan

      - name: Terraform Apply
        run: terraform -chdir=terraform/ apply -auto-approve -var=ECR_REPO=${{ steps.build-image.outputs.image }}
